// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PainelPokemon.Data;

#nullable disable

namespace PainelPokemon.Migrations
{
    [DbContext(typeof(PokeContext))]
    partial class PokeContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "6.0.25");

            modelBuilder.Entity("PainelPokemon.Models.Pokemons.FavoritePokemon", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("PokemonUnityId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("UserId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("PokemonUnityId");

                    b.HasIndex("UserId");

                    b.ToTable("FavoritePokemons");
                });

            modelBuilder.Entity("PainelPokemon.Models.Pokemons.PokemonUnity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("SpritesId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Weight")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("SpritesId");

                    b.ToTable("Pokemons");
                });

            modelBuilder.Entity("PainelPokemon.Models.Pokemons.Sprites", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("FrontDefault")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Sprites");
                });

            modelBuilder.Entity("PainelPokemon.Models.Users.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(160)
                        .HasColumnType("VARCHAR")
                        .HasColumnName("Email");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("VARCHAR")
                        .HasColumnName("Password");

                    b.HasKey("Id");

                    b.ToTable("User", (string)null);
                });

            modelBuilder.Entity("PainelPokemon.Models.Pokemons.FavoritePokemon", b =>
                {
                    b.HasOne("PainelPokemon.Models.Pokemons.PokemonUnity", null)
                        .WithMany("FavoritedByUsers")
                        .HasForeignKey("PokemonUnityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PainelPokemon.Models.Users.User", null)
                        .WithMany("FavoritePokemons")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("PainelPokemon.Models.Pokemons.PokemonUnity", b =>
                {
                    b.HasOne("PainelPokemon.Models.Pokemons.Sprites", "Sprites")
                        .WithMany()
                        .HasForeignKey("SpritesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Sprites");
                });

            modelBuilder.Entity("PainelPokemon.Models.Pokemons.PokemonUnity", b =>
                {
                    b.Navigation("FavoritedByUsers");
                });

            modelBuilder.Entity("PainelPokemon.Models.Users.User", b =>
                {
                    b.Navigation("FavoritePokemons");
                });
#pragma warning restore 612, 618
        }
    }
}
